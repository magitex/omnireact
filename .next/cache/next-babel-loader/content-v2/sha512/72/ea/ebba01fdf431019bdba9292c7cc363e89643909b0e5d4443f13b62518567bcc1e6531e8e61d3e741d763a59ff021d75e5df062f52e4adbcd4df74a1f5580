{"ast":null,"code":"import _regeneratorRuntime from \"/Users/trilokeshnaskar/Desktop/omni-server/stormy-dusk-22997/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/trilokeshnaskar/Desktop/omni-server/stormy-dusk-22997/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport config from './config';\nimport axios from 'axios';\n\nvar qs = require('qs');\n\nvar serverUrl = config.baseUrl;\nif (true) if (window.localStorage.getItem('token') !== null) {\n  axios.defaults.headers.common['Authorization'] = localStorage.getItem('token_type') + ' ' + localStorage.getItem('token');\n  axios.defaults.headers.common['Content-Type'] = 'application/x-www-form-urlencoded';\n}\nvar Network = {\n  getToken: function () {\n    var _getToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                var data = qs.stringify({\n                  grant_type: 'client_credentials'\n                });\n                axios({\n                  url: serverUrl + config.auth,\n                  method: 'post',\n                  data: data,\n                  headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                    Authorization: 'Basic ' + btoa('mobile:pin')\n                  }\n                }).then(function (data) {\n                  console.log('data', data.data);\n                  var authData = data.data;\n                  localStorage.setItem('token', authData.access_token);\n                  localStorage.setItem('token_type', authData.token_type);\n                  axios.defaults.headers.common['Authorization'] = localStorage.getItem('token_type') + ' ' + localStorage.getItem('token');\n                  axios.defaults.headers.common['Content-Type'] = 'application/x-www-form-urlencoded';\n                  return resolve(data); // localStorage.setItem()\n                })[\"catch\"](function (err) {\n                  return reject(err);\n                });\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getToken() {\n      return _getToken.apply(this, arguments);\n    }\n\n    return getToken;\n  }(),\n  dashboardData: function () {\n    var _dashboardData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n                navigator.geolocation.getCurrentPosition(function (position) {\n                  localStorage.setItem('latitude', position.coords.latitude);\n                  localStorage.setItem('longitude', position.coords.longitude);\n                  console.log(\"Latitude is :\", localStorage.getItem('latitude'));\n                  console.log(\"Longitude is :\", localStorage.getItem('longitude'));\n                });\n                var data = {\n                  channelId: 1,\n                  customerId: 1,\n                  language: 'ENG',\n                  userId: 2,\n                  latitude: localStorage.getItem('latitude'),\n                  longitude: localStorage.getItem('longitude'),\n                  storeId: 1\n                };\n                axios({\n                  url: serverUrl + config.dashboardData,\n                  method: 'post',\n                  data: data,\n                  headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem('token') + '',\n                    'Content-Type': 'application/json'\n                  }\n                }).then(function (data) {\n                  resolve(data);\n                })[\"catch\"](function (err) {\n                  return reject(err);\n                });\n              }));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function dashboardData() {\n      return _dashboardData.apply(this, arguments);\n    }\n\n    return dashboardData;\n  }()\n};\nexport default Network;","map":{"version":3,"sources":["/Users/trilokeshnaskar/Desktop/omni-server/stormy-dusk-22997/components/helpers/networks.js"],"names":["config","axios","qs","require","serverUrl","baseUrl","window","localStorage","getItem","defaults","headers","common","Network","getToken","Promise","resolve","reject","data","stringify","grant_type","url","auth","method","Authorization","btoa","then","console","log","authData","setItem","access_token","token_type","err","dashboardData","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","channelId","customerId","language","userId","storeId"],"mappings":"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","sourcesContent":["import config from './config';\nimport axios from 'axios';\nvar qs = require('qs');\nconst serverUrl = config.baseUrl;\nif (typeof window !== 'undefined')\n    if (window.localStorage.getItem('token') !== null) {\n        axios.defaults.headers.common['Authorization'] =\n            localStorage.getItem('token_type') +\n            ' ' +\n            localStorage.getItem('token');\n        axios.defaults.headers.common['Content-Type'] =\n            'application/x-www-form-urlencoded';\n    }\n\nconst Network = {\n    getToken: async () => {\n        return new Promise((resolve, reject) => {\n            var data = qs.stringify({\n                grant_type: 'client_credentials',\n            });\n            axios({\n                url: serverUrl + config.auth,\n                method: 'post',\n                data: data,\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                    Authorization: 'Basic ' + btoa('mobile:pin'),\n                },\n            })\n                .then((data) => {\n                    console.log('data', data.data);\n                    const authData = data.data;\n                    localStorage.setItem('token', authData.access_token);\n                    localStorage.setItem('token_type', authData.token_type);\n                    axios.defaults.headers.common['Authorization'] =\n                        localStorage.getItem('token_type') +\n                        ' ' +\n                        localStorage.getItem('token');\n                    axios.defaults.headers.common['Content-Type'] =\n                        'application/x-www-form-urlencoded';\n                    return resolve(data);\n                    // localStorage.setItem()\n                })\n                .catch((err) => reject(err));\n        });\n    },\n    dashboardData: async () => {\n        return new Promise((resolve, reject) => {\n           \n            navigator.geolocation.getCurrentPosition(function(position) {\n                localStorage.setItem('latitude', position.coords.latitude);\n                    localStorage.setItem('longitude', position.coords.longitude);\n                console.log(\"Latitude is :\", localStorage.getItem('latitude'));\n                console.log(\"Longitude is :\",localStorage.getItem('longitude'));\n              });\n            var data = {\n                channelId: 1,\n                customerId: 1,\n                language: 'ENG',\n                userId: 2,\n                latitude: localStorage.getItem('latitude'),\n                longitude: localStorage.getItem('longitude'),\n                storeId: 1,\n            };\n            axios({\n                url: serverUrl + config.dashboardData,\n                method: 'post',\n                data: data,\n                headers: { \n                    'Authorization': 'Bearer '+localStorage.getItem('token')+'', \n                    'Content-Type': 'application/json'\n                  },\n            })\n                .then((data) => {\n                    resolve(data);\n                })\n                .catch((err) => reject(err));\n        });\n    },\n};\n\nexport default Network;\n"]},"metadata":{},"sourceType":"module"}