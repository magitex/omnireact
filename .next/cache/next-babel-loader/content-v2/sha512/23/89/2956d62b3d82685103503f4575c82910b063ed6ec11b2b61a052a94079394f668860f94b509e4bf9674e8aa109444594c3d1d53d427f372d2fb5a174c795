{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/prosenjit/omnireact/stormy-dusk-22997/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/prosenjit/omnireact/stormy-dusk-22997/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport config from './config';\nimport axios from 'axios';\n\nvar qs = require('qs');\n\nvar serverUrl = config.baseUrl;\nif (true) if (window.localStorage.getItem('token') !== null) {\n  axios.defaults.headers.common['Authorization'] = localStorage.getItem('token_type') + ' ' + localStorage.getItem('token');\n  axios.defaults.headers.common['Content-Type'] = 'application/x-www-form-urlencoded';\n}\nvar Network = {\n  getToken: function () {\n    var _getToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                var data = qs.stringify({\n                  grant_type: 'client_credentials'\n                });\n                axios({\n                  url: serverUrl + config.auth,\n                  method: 'post',\n                  data: data,\n                  headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                    Authorization: 'Basic ' + btoa('mobile:pin')\n                  }\n                }).then(function (data) {\n                  console.log('data', data.data);\n                  var authData = data.data;\n                  localStorage.setItem('token', authData.access_token);\n                  localStorage.setItem('token_type', authData.token_type);\n                  axios.defaults.headers.common['Authorization'] = localStorage.getItem('token_type') + ' ' + localStorage.getItem('token');\n                  axios.defaults.headers.common['Content-Type'] = 'application/x-www-form-urlencoded';\n                  return resolve(data); // localStorage.setItem()\n                })[\"catch\"](function (err) {\n                  return reject(err);\n                });\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getToken() {\n      return _getToken.apply(this, arguments);\n    }\n\n    return getToken;\n  }(),\n  dashboardData: function () {\n    var _dashboardData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n                if (window.localStorage.getItem('longitude') == null) {\n                  navigator.geolocation.getCurrentPosition(function (position) {\n                    localStorage.setItem('latitude', position.coords.latitude);\n                    localStorage.setItem('longitude', position.coords.longitude);\n                    console.log(\"Latitude is :\", localStorage.getItem('latitude'));\n                    console.log(\"Longitude is :\", localStorage.getItem('longitude'));\n                  });\n                }\n\n                var data = {\n                  channelId: 2,\n                  customerId: 1,\n                  language: 'ENG',\n                  userId: 2,\n                  latitude: localStorage.getItem('latitude'),\n                  longitude: localStorage.getItem('longitude'),\n                  storeId: 1\n                };\n                axios({\n                  url: serverUrl + config.dashboardData,\n                  method: 'post',\n                  data: data,\n                  headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem('token') + '',\n                    'Content-Type': 'application/json'\n                  }\n                }).then(function (data) {\n                  resolve(data);\n                })[\"catch\"](function (err) {\n                  return reject(err);\n                });\n              }));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function dashboardData() {\n      return _dashboardData.apply(this, arguments);\n    }\n\n    return dashboardData;\n  }(),\n  productDetails: function () {\n    var _productDetails = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(pid) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", new Promise(function (resolve, reject) {\n                if (window.localStorage.getItem('longitude') == null) {\n                  navigator.geolocation.getCurrentPosition(function (position) {\n                    localStorage.setItem('latitude', position.coords.latitude);\n                    localStorage.setItem('longitude', position.coords.longitude);\n                    console.log(\"Latitude is :\", localStorage.getItem('latitude'));\n                    console.log(\"Longitude is :\", localStorage.getItem('longitude'));\n                  });\n                }\n\n                var data = {\n                  channelId: 2,\n                  customerId: 1,\n                  language: 'ENG',\n                  userId: 2,\n                  storeId: 1\n                };\n                axios({\n                  url: serverUrl + config.productDetails + '?CustomerID=1&StoreID=1&LanguageCode=ENG&ProductID=' + pid + '&ChannelID=2',\n                  method: 'post',\n                  data: data,\n                  headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem('token') + '',\n                    'Content-Type': 'application/json'\n                  }\n                }).then(function (data) {\n                  resolve(data);\n                })[\"catch\"](function (err) {\n                  return reject(err);\n                });\n              }));\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function productDetails(_x) {\n      return _productDetails.apply(this, arguments);\n    }\n\n    return productDetails;\n  }(),\n  saveUserAddress: function () {\n    var _saveUserAddress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(postvar) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.abrupt(\"return\", new Promise(function (resolve, reject) {\n                if (window.localStorage.getItem('longitude') == null) {\n                  navigator.geolocation.getCurrentPosition(function (position) {\n                    localStorage.setItem('latitude', position.coords.latitude);\n                    localStorage.setItem('longitude', position.coords.longitude);\n                    console.log(\"Latitude is :\", localStorage.getItem('latitude'));\n                    console.log(\"Longitude is :\", localStorage.getItem('longitude'));\n                  });\n                }\n\n                console.log(\"post:\", postvar);\n                var data = {\n                  address: postvar.address,\n                  addressType: postvar.type,\n                  city: postvar.city,\n                  country: \"India\",\n                  entryUserId: 2,\n                  latitude: postvar.markerPosition.lat,\n                  longitude: postvar.markerPosition.lng,\n                  pinCode: postvar.pinCode,\n                  state: postvar.state,\n                  userId: 2\n                };\n                axios({\n                  url: serverUrl + config.saveUserAddress,\n                  method: 'post',\n                  data: data,\n                  headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem('token') + '',\n                    'Content-Type': 'application/json'\n                  }\n                }).then(function (data) {\n                  resolve(data);\n                })[\"catch\"](function (err) {\n                  return reject(err);\n                });\n              }));\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function saveUserAddress(_x2) {\n      return _saveUserAddress.apply(this, arguments);\n    }\n\n    return saveUserAddress;\n  }(),\n  generateOTP: function () {\n    var _generateOTP = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(postvar) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              return _context5.abrupt(\"return\", new Promise() < string > function (resolve, reject) {\n                if (window.localStorage.getItem('longitude') == null) {\n                  navigator.geolocation.getCurrentPosition(function (position) {\n                    localStorage.setItem('latitude', position.coords.latitude);\n                    localStorage.setItem('longitude', position.coords.longitude);\n                    console.log(\"Latitude is :\", localStorage.getItem('latitude'));\n                    console.log(\"Longitude is :\", localStorage.getItem('longitude'));\n                  });\n                }\n\n                console.log(\"post:\", postvar);\n                var data = {\n                  customerID: 1,\n                  hashKEY: \"KJYT1324\",\n                  phoneNo: postvar.phonenumber\n                };\n                axios({\n                  url: serverUrl + config.generateOTP,\n                  method: 'post',\n                  data: data,\n                  headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem('token') + '',\n                    'Content-Type': 'application/json'\n                  }\n                }).then(function (data) {\n                  resolve(data);\n                })[\"catch\"](function (err) {\n                  return reject(err);\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function generateOTP(_x3) {\n      return _generateOTP.apply(this, arguments);\n    }\n\n    return generateOTP;\n  }(),\n  validateOTP: function () {\n    var _validateOTP = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(postvar) {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              return _context6.abrupt(\"return\", new Promise(function (resolve, reject) {\n                if (window.localStorage.getItem('longitude') == null) {\n                  navigator.geolocation.getCurrentPosition(function (position) {\n                    localStorage.setItem('latitude', position.coords.latitude);\n                    localStorage.setItem('longitude', position.coords.longitude);\n                    console.log(\"Latitude is :\", localStorage.getItem('latitude'));\n                    console.log(\"Longitude is :\", localStorage.getItem('longitude'));\n                  });\n                }\n\n                console.log(\"post:\", postvar);\n                var data = {\n                  customerID: 1,\n                  deviceID: \"HJGGT5678\",\n                  mobileNo: postvar.phonenumber,\n                  otp: postvar.otp,\n                  pushID: \"8766GHFFDD\",\n                  userFullName: postvar.username\n                };\n                axios({\n                  url: serverUrl + config.validateOTP,\n                  method: 'post',\n                  data: data,\n                  headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem('token') + '',\n                    'Content-Type': 'application/json'\n                  }\n                }).then(function (data) {\n                  resolve(data);\n                })[\"catch\"](function (err) {\n                  return reject(err);\n                });\n              }));\n\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    function validateOTP(_x4) {\n      return _validateOTP.apply(this, arguments);\n    }\n\n    return validateOTP;\n  }()\n};\nexport default Network;","map":null,"metadata":{},"sourceType":"module"}