{"ast":null,"code":"import _regeneratorRuntime from \"/Users/trilokeshnaskar/Desktop/omni-server/stormy-dusk-22997/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/Users/trilokeshnaskar/Desktop/omni-server/stormy-dusk-22997/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/trilokeshnaskar/Desktop/omni-server/stormy-dusk-22997/components/shared/headers/modules/SearchLocationInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nvar autoComplete;\n\nvar loadScript = function loadScript(url, callback) {\n  var script = document.createElement(\"script\");\n  script.type = \"text/javascript\";\n\n  if (script.readyState) {\n    script.onreadystatechange = function () {\n      if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\n        script.onreadystatechange = null;\n        callback();\n      }\n    };\n  } else {\n    script.onload = function () {\n      return callback();\n    };\n  }\n\n  script.src = url;\n  document.getElementsByTagName(\"head\")[0].appendChild(script);\n};\n\nfunction handleScriptLoad(updateQuery, autoCompleteRef) {\n  autoComplete = new window.google.maps.places.Autocomplete(autoCompleteRef.current, {\n    types: [\"(cities)\"],\n    componentRestrictions: {\n      country: \"in\"\n    }\n  });\n  autoComplete.setFields([\"address_components\", \"formatted_address\"]);\n  autoComplete.addListener(\"place_changed\", function () {\n    return handlePlaceSelect(updateQuery);\n  });\n}\n\nfunction handlePlaceSelect(_x) {\n  return _handlePlaceSelect.apply(this, arguments);\n}\n\nfunction _handlePlaceSelect() {\n  _handlePlaceSelect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(updateQuery) {\n    var addressObject, query;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            addressObject = autoComplete.getPlace();\n            query = addressObject.formatted_address;\n            updateQuery(query);\n            console.log(addressObject);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _handlePlaceSelect.apply(this, arguments);\n}\n\nfunction SearchLocationInput() {\n  _s();\n\n  var _useState = useState(\"\"),\n      query = _useState[0],\n      setQuery = _useState[1];\n\n  var autoCompleteRef = useRef(null);\n  useEffect(function () {\n    loadScript(\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDPgRKAUNl2uKfGyLSxfcXLKS2hT0v3h7Y&libraries=places\", function () {\n      return handleScriptLoad(setQuery, autoCompleteRef);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-location-input\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: autoCompleteRef,\n      onChange: function onChange(event) {\n        return setQuery(event.target.value);\n      },\n      placeholder: \"Enter a City\",\n      value: query\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchLocationInput, \"cw7s3e3vkyUWL/AnWpSxZTGSPcQ=\");\n\n_c = SearchLocationInput;\nexport default SearchLocationInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchLocationInput\");","map":{"version":3,"sources":["/Users/trilokeshnaskar/Desktop/omni-server/stormy-dusk-22997/components/shared/headers/modules/SearchLocationInput.jsx"],"names":["React","useState","useEffect","useRef","autoComplete","loadScript","url","callback","script","document","createElement","type","readyState","onreadystatechange","onload","src","getElementsByTagName","appendChild","handleScriptLoad","updateQuery","autoCompleteRef","window","google","maps","places","Autocomplete","current","types","componentRestrictions","country","setFields","addListener","handlePlaceSelect","addressObject","getPlace","query","formatted_address","console","log","SearchLocationInput","setQuery","event","target","value"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AAEA,IAAIC,YAAJ;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAMC,QAAN,EAAmB;AACpC,MAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACAF,EAAAA,MAAM,CAACG,IAAP,GAAc,iBAAd;;AAEA,MAAIH,MAAM,CAACI,UAAX,EAAuB;AACrBJ,IAAAA,MAAM,CAACK,kBAAP,GAA4B,YAAW;AACrC,UAAIL,MAAM,CAACI,UAAP,KAAsB,QAAtB,IAAkCJ,MAAM,CAACI,UAAP,KAAsB,UAA5D,EAAwE;AACtEJ,QAAAA,MAAM,CAACK,kBAAP,GAA4B,IAA5B;AACAN,QAAAA,QAAQ;AACT;AACF,KALD;AAMD,GAPD,MAOO;AACLC,IAAAA,MAAM,CAACM,MAAP,GAAgB;AAAA,aAAMP,QAAQ,EAAd;AAAA,KAAhB;AACD;;AAEDC,EAAAA,MAAM,CAACO,GAAP,GAAaT,GAAb;AACAG,EAAAA,QAAQ,CAACO,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,WAAzC,CAAqDT,MAArD;AACD,CAjBD;;AAmBA,SAASU,gBAAT,CAA0BC,WAA1B,EAAuCC,eAAvC,EAAwD;AACtDhB,EAAAA,YAAY,GAAG,IAAIiB,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,MAAnB,CAA0BC,YAA9B,CACbL,eAAe,CAACM,OADH,EAEb;AAAEC,IAAAA,KAAK,EAAE,CAAC,UAAD,CAAT;AAAuBC,IAAAA,qBAAqB,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX;AAA9C,GAFa,CAAf;AAIAzB,EAAAA,YAAY,CAAC0B,SAAb,CAAuB,CAAC,oBAAD,EAAuB,mBAAvB,CAAvB;AACA1B,EAAAA,YAAY,CAAC2B,WAAb,CAAyB,eAAzB,EAA0C;AAAA,WACxCC,iBAAiB,CAACb,WAAD,CADuB;AAAA,GAA1C;AAGD;;SAEca,iB;;;;;gFAAf,iBAAiCb,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AACQc,YAAAA,aADR,GACwB7B,YAAY,CAAC8B,QAAb,EADxB;AAEQC,YAAAA,KAFR,GAEgBF,aAAa,CAACG,iBAF9B;AAGEjB,YAAAA,WAAW,CAACgB,KAAD,CAAX;AACAE,YAAAA,OAAO,CAACC,GAAR,CAAYL,aAAZ;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAOA,SAASM,mBAAT,GAA+B;AAAA;;AAAA,kBACHtC,QAAQ,CAAC,EAAD,CADL;AAAA,MACtBkC,KADsB;AAAA,MACfK,QADe;;AAE7B,MAAMpB,eAAe,GAAGjB,MAAM,CAAC,IAAD,CAA9B;AAEAD,EAAAA,SAAS,CAAC,YAAM;AACdG,IAAAA,UAAU,yGAER;AAAA,aAAMa,gBAAgB,CAACsB,QAAD,EAAWpB,eAAX,CAAtB;AAAA,KAFQ,CAAV;AAID,GALQ,EAKN,EALM,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,2BACE;AACE,MAAA,GAAG,EAAEA,eADP;AAEE,MAAA,QAAQ,EAAE,kBAAAqB,KAAK;AAAA,eAAID,QAAQ,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AAAA,OAFjB;AAGE,MAAA,WAAW,EAAC,cAHd;AAIE,MAAA,KAAK,EAAER;AAJT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GArBQI,mB;;KAAAA,mB;AAuBT,eAAeA,mBAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nlet autoComplete;\n\nconst loadScript = (url, callback) => {\n  let script = document.createElement(\"script\");\n  script.type = \"text/javascript\";\n\n  if (script.readyState) {\n    script.onreadystatechange = function() {\n      if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\n        script.onreadystatechange = null;\n        callback();\n      }\n    };\n  } else {\n    script.onload = () => callback();\n  }\n\n  script.src = url;\n  document.getElementsByTagName(\"head\")[0].appendChild(script);\n};\n\nfunction handleScriptLoad(updateQuery, autoCompleteRef) {\n  autoComplete = new window.google.maps.places.Autocomplete(\n    autoCompleteRef.current,\n    { types: [\"(cities)\"], componentRestrictions: { country: \"in\" } }\n  );\n  autoComplete.setFields([\"address_components\", \"formatted_address\"]);\n  autoComplete.addListener(\"place_changed\", () =>\n    handlePlaceSelect(updateQuery)\n  );\n}\n\nasync function handlePlaceSelect(updateQuery) {\n  const addressObject = autoComplete.getPlace();\n  const query = addressObject.formatted_address;\n  updateQuery(query);\n  console.log(addressObject);\n}\n\nfunction SearchLocationInput() {\n  const [query, setQuery] = useState(\"\");\n  const autoCompleteRef = useRef(null);\n\n  useEffect(() => {\n    loadScript(\n      `https://maps.googleapis.com/maps/api/js?key=AIzaSyDPgRKAUNl2uKfGyLSxfcXLKS2hT0v3h7Y&libraries=places`,\n      () => handleScriptLoad(setQuery, autoCompleteRef)\n    );\n  }, []);\n\n  return (\n    <div className=\"search-location-input\">\n      <input\n        ref={autoCompleteRef}\n        onChange={event => setQuery(event.target.value)}\n        placeholder=\"Enter a City\"\n        value={query}\n      />\n    </div>\n  );\n}\n\nexport default SearchLocationInput;"]},"metadata":{},"sourceType":"module"}